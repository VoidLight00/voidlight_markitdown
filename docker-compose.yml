version: '3.8'

services:
  # Main application service
  markitdown:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - PYTHON_VERSION=3.11
    image: voidlight/markitdown:local
    container_name: voidlight-markitdown
    environment:
      - ENVIRONMENT=development
      - LOG_LEVEL=DEBUG
      - PYTHONUNBUFFERED=1
    volumes:
      - ./src:/app/src
      - ./tests:/app/tests
      - ./config:/app/config
      - ./logs:/app/logs
    ports:
      - "8000:8000"  # API port if needed
      - "5678:5678"  # Debug port
    command: ["python", "-m", "voidlight_markitdown"]
    networks:
      - markitdown-network
    healthcheck:
      test: ["CMD", "python", "-c", "import voidlight_markitdown; print('healthy')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # MCP Server service
  mcp-server:
    build:
      context: .
      dockerfile: Dockerfile.mcp
    image: voidlight/markitdown-mcp:local
    container_name: voidlight-markitdown-mcp
    environment:
      - ENVIRONMENT=development
      - LOG_LEVEL=DEBUG
      - MCP_TRANSPORT=stdio
    volumes:
      - ./src:/app/src
      - ./config:/app/config
      - ./logs:/app/logs
    ports:
      - "3000:3000"  # MCP port
    networks:
      - markitdown-network
    depends_on:
      - markitdown
      - redis

  # Redis for caching and task queue
  redis:
    image: redis:7-alpine
    container_name: markitdown-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - markitdown-network
    command: ["redis-server", "--appendonly", "yes"]
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # PostgreSQL for metadata storage (optional)
  postgres:
    image: postgres:16-alpine
    container_name: markitdown-postgres
    environment:
      - POSTGRES_DB=markitdown
      - POSTGRES_USER=markitdown
      - POSTGRES_PASSWORD=markitdown_dev
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./scripts/sql:/docker-entrypoint-initdb.d
    networks:
      - markitdown-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U markitdown"]
      interval: 10s
      timeout: 5s
      retries: 5

  # MinIO for object storage (for large files)
  minio:
    image: minio/minio:latest
    container_name: markitdown-minio
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio-data:/data
    networks:
      - markitdown-network
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  # Prometheus for metrics
  prometheus:
    image: prom/prometheus:latest
    container_name: markitdown-prometheus
    volumes:
      - ./config/prometheus:/etc/prometheus
      - prometheus-data:/prometheus
    ports:
      - "9090:9090"
    networks:
      - markitdown-network
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'

  # Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: markitdown-grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    ports:
      - "3001:3000"
    volumes:
      - grafana-data:/var/lib/grafana
      - ./config/grafana/provisioning:/etc/grafana/provisioning
    networks:
      - markitdown-network
    depends_on:
      - prometheus

  # Jaeger for distributed tracing
  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: markitdown-jaeger
    environment:
      - COLLECTOR_ZIPKIN_HOST_PORT=:9411
    ports:
      - "5775:5775/udp"
      - "6831:6831/udp"
      - "6832:6832/udp"
      - "5778:5778"
      - "16686:16686"
      - "14268:14268"
      - "14250:14250"
      - "9411:9411"
    networks:
      - markitdown-network

networks:
  markitdown-network:
    driver: bridge

volumes:
  redis-data:
  postgres-data:
  minio-data:
  prometheus-data:
  grafana-data: