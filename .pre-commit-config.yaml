default_language_version:
  python: python3.9

repos:
  # General hooks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: trailing-whitespace
        exclude: ^tests/fixtures/
      - id: end-of-file-fixer
        exclude: ^tests/fixtures/
      - id: check-yaml
        args: [--allow-multiple-documents]
      - id: check-added-large-files
        args: ['--maxkb=1000']
      - id: check-case-conflict
      - id: check-merge-conflict
      - id: check-json
      - id: check-toml
      - id: check-xml
      - id: debug-statements
      - id: detect-private-key
      - id: fix-byte-order-marker
      - id: mixed-line-ending
        args: ['--fix=lf']
      - id: check-docstring-first
      - id: check-executables-have-shebangs
      - id: check-shebang-scripts-are-executable

  # Python code formatting
  - repo: https://github.com/psf/black
    rev: 24.4.2
    hooks:
      - id: black
        language_version: python3.9
        args: ['--line-length=120', '--target-version=py39']

  # Import sorting
  - repo: https://github.com/pycqa/isort
    rev: 5.13.2
    hooks:
      - id: isort
        args: ['--profile=black', '--line-length=120']

  # Python linting
  - repo: https://github.com/pycqa/flake8
    rev: 7.0.0
    hooks:
      - id: flake8
        args: ['--max-line-length=120', '--extend-ignore=E203,W503']
        additional_dependencies:
          - flake8-docstrings
          - flake8-comprehensions
          - flake8-bugbear
          - flake8-simplify

  # Type checking
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.10.0
    hooks:
      - id: mypy
        args: ['--config-file=pyproject.toml']
        additional_dependencies:
          - types-requests
          - types-tabulate
          - types-setuptools

  # Security checks
  - repo: https://github.com/pycqa/bandit
    rev: 1.7.8
    hooks:
      - id: bandit
        args: ['-c', 'pyproject.toml']
        exclude: ^tests/

  # Markdown linting
  - repo: https://github.com/igorshubovych/markdownlint-cli
    rev: v0.40.0
    hooks:
      - id: markdownlint
        args: ['--fix']

  # YAML linting
  - repo: https://github.com/adrienverge/yamllint
    rev: v1.35.1
    hooks:
      - id: yamllint
        args: ['-c', '.yamllint.yml']

  # Shell script linting
  - repo: https://github.com/shellcheck-py/shellcheck-py
    rev: v0.10.0.1
    hooks:
      - id: shellcheck

  # Dockerfile linting
  - repo: https://github.com/hadolint/hadolint
    rev: v2.12.0
    hooks:
      - id: hadolint-docker

  # License header check
  - repo: https://github.com/Lucas-C/pre-commit-hooks
    rev: v1.5.5
    hooks:
      - id: insert-license
        name: Add license header to Python files
        files: \.py$
        args:
          - --license-filepath
          - .license-header.txt
          - --comment-style
          - "#"
        exclude: ^(tests/|src/voidlight_markitdown/__about__.py)

  # Commit message linting
  - repo: https://github.com/commitizen-tools/commitizen
    rev: v3.25.0
    hooks:
      - id: commitizen
        stages: [commit-msg]

# Local hooks
  - repo: local
    hooks:
      - id: pytest-check
        name: pytest-check
        entry: pytest
        language: system
        pass_filenames: false
        always_run: true
        args: ['-x', '--tb=short', '--quiet']
        stages: [push]

      - id: requirements-check
        name: Check requirements files
        entry: python scripts/maintenance/check_requirements.py
        language: system
        files: ^requirements/.*\.(in|txt)$

      - id: no-print-statements
        name: No print statements in production code
        entry: '(?<!def )print\('
        language: pygrep
        types: [python]
        exclude: ^(tests/|examples/|scripts/)